// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	service "awesomeProject/userservice/pkg/service"
	endpoint "github.com/go-kit/kit/endpoint"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	GetUserListEndpoint endpoint.Endpoint
	LoginEndpoint       endpoint.Endpoint
	GetUserInfoEndpoint endpoint.Endpoint
	SignEndpoint        endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.UserserviceService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		GetUserListEndpoint: MakeGetUserListEndpoint(s),
		LoginEndpoint:       MakeLoginEndpoint(s),
		GetUserInfoEndpoint: MakeGetUserInfoEndpoint(s),
		SignEndpoint:        MakeSignEndpoint(s),
	}
	for _, m := range mdw["GetUserList"] {
		eps.GetUserListEndpoint = m(eps.GetUserListEndpoint)
	}
	for _, m := range mdw["Login"] {
		eps.LoginEndpoint = m(eps.LoginEndpoint)
	}
	for _, m := range mdw["GetUserInfo"] {
		eps.LoginEndpoint = m(eps.GetUserInfoEndpoint)
	}
	for _, m := range mdw["Sign"] {
		eps.SignEndpoint = m(eps.SignEndpoint)
	}
	return eps
}
